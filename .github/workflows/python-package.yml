name: gtfstosqlite package testing

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: "3.11"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Install package
      run: |
        pip install .
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    # Check if the artifact already exists
    - name: Check if artifact exists
      id: check_artifact
      run: |
        count=$(gh run list --workflow=python-package.yml | grep "completed" | wc -l)
        echo "Completed runs: $count"
        if [ $count -lt 1 ]; then
          echo "::set-output name=exists::false"
        else
          echo "::set-output name=exists::true"
        fi
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    # Download the file if artifact does not exist
    - name: Download gtfs.zip (if artifact doesn't exist)
      if: steps.check_artifact.outputs.exists == 'false'
      run: wget -O gtfs.zip https://transport-data-gouv-fr-resource-history-prod.cellar-c2.services.clever-cloud.com/79374/79374.20230822.090932.391003.zip

    # Upload the file as an artifact if it was downloaded in the previous step
    - name: Upload gtfs.zip as artifact (if artifact doesn't exist)
      if: steps.check_artifact.outputs.exists == 'false'
      uses: actions/upload-artifact@v2
      with:
        name: gtfs-data
        path: gtfs.zip

    # Download the file from artifact storage
    - name: Download gtfs.zip from artifact
      uses: actions/download-artifact@v2
      with:
        name: gtfs-data

    # Run tests
    - name: Test with pytest
      run: pytest
